<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Security on naveen srinivasan</title><link>/categories/security/</link><description>Recent content in Security on naveen srinivasan</description><generator>Hugo</generator><language>en</language><lastBuildDate>Mon, 20 Jun 2011 17:45:24 +0000</lastBuildDate><atom:link href="/categories/security/index.xml" rel="self" type="application/rss+xml"/><item><title>Making an Image Easier to Debug</title><link>/?p=1368/</link><pubDate>Mon, 20 Jun 2011 17:45:24 +0000</pubDate><guid>/?p=1368/</guid><description>&lt;p>I am doing security review for a managed application which is obfuscated. So I am doing a lot of   disassembling code at runtime using Windbg. One of the issues is that code gets JIT optimized because of the retail build. This makes it harder for me debug when mapping it back. Realized  that I could turnoff  JIT Optimization’s using the ini file.&lt;/p>
&lt;p>[sourcecode]&lt;/p>
&lt;p>[.NET Framework Debugging Control]&lt;/p>
&lt;p>GenerateTrackingInfo=1&lt;/p>
&lt;p>AllowOptimize=0&lt;/p>
&lt;p>[/sourcecode]&lt;/p></description></item><item><title>Piracy in .NET Code – Part 3 – Even when the code is obfuscated</title><link>/?p=769/</link><pubDate>Sat, 12 Jun 2010 00:37:46 +0000</pubDate><guid>/?p=769/</guid><description>&lt;p>Continuing with my &lt;a href="http://naveensrinivasan.com/category/security/">series&lt;/a> on Piracy, in this post I am going to be  exploring how someone with little advanced knowledge in CLR / Windows can bypass important function calls like  license validation.&lt;/p>
&lt;p>Most of the developers assume just because the code is obfuscated nobody can bypass the licensing logic. I am going to be demonstrating how to bypass certain function call,this is very similar to “Set Next Statement ” in VS. I am not going to be discussing on how to fix this problem.&lt;/p></description></item></channel></rss>