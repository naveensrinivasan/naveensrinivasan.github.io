<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Odata on naveen srinivasan</title><link>/categories/odata/</link><description>Recent content in Odata on naveen srinivasan</description><generator>Hugo</generator><language>en</language><lastBuildDate>Wed, 03 Nov 2010 01:56:34 +0000</lastBuildDate><atom:link href="/categories/odata/index.xml" rel="self" type="application/rss+xml"/><item><title>Downloading PDC10 videos using the new async feature</title><link>/?p=1156/</link><pubDate>Wed, 03 Nov 2010 01:56:34 +0000</pubDate><guid>/?p=1156/</guid><description>&lt;p>I knew PDC10 has an OData endpoint which is &lt;a href="http://odata.microsoftpdc.com/ODataSchedule.svc/">http://odata.microsoftpdc.com/ODataSchedule.svc/&lt;/a> . The best part about  OData is querying for specific data that we are looking for. And here is my OData url for filtering twitter hashtag #languages&lt;/p>
&lt;p>[sourcecode]&lt;/p>
&lt;p>&lt;a href="http://odata.microsoftpdc.com/ODataSchedule.svc/Sessions()?$filter=startswith(TwitterHashtag,&amp;#8217;%23languages&amp;%238217;)&amp;$expand=DownloadableContent&amp;$select=DownloadableContent">http://odata.microsoftpdc.com/ODataSchedule.svc/Sessions()?$filter=startswith(TwitterHashtag,&amp;#8217;%23languages&amp;#8217;)&amp;$expand=DownloadableContent&amp;$select=DownloadableContent&lt;/a>&lt;/p>
&lt;p>[/sourcecode]&lt;/p>
&lt;p>With the above OData feed I could get urls for low bandwidth mp4’s that I can download. And here is the sample code for filtering&lt;/p>
&lt;p>[sourcecode language=”csharp”]&lt;/p>
&lt;p>var x =XDocument.Load(@&amp;ldquo;c:tempsession.xml&amp;rdquo;).Descendants().AsParallel().Where(xd =&amp;gt; xd.Name.LocalName==&amp;ldquo;Url&amp;rdquo;&lt;/p></description></item><item><title>Combining Stack Overflow RSS, OData and API to query</title><link>/?p=978/</link><pubDate>Wed, 14 Jul 2010 03:18:05 +0000</pubDate><guid>/?p=978/</guid><description>&lt;p>In my opinion &lt;a href="http://stackoverflow.com/">Stack Overflow&lt;/a> has a ton of knowledge to learn new tricks. And there are some really smart people in the SO community. I try and learn new things when I find time.&lt;/p>
&lt;p>I subscribe to RSS feeds for new questions on a particular topic. Example, here is one for F# from Stack Overflow &lt;a href="http://stackoverflow.com/feeds/tag/f%23">http://stackoverflow.com/feeds/tag/f%23&lt;/a>. The advantage of the RSS feed is I get to see new questions, but the drawback is I would have to navigate to the site to look for answers. AFAIK the &lt;a href="http://stacky.codeplex.com/">stacky&lt;/a> (stack overflow API) does not provide a mechanism for querying new questions based on a tag.&lt;/p></description></item><item><title>Using Tech-Ed OData to download videos</title><link>/?p=2071/</link><pubDate>Tue, 15 Jun 2010 12:20:32 +0000</pubDate><guid>/?p=2071/</guid><description>&lt;p>I wanted to watch the Teched 2010 videos, but the problem I had was going to the site manually to download files for offline viewing.  And I was also interested only in Dev sessions which were level 300 / 400. Thanks to OData for teched &lt;a href="http://odata.msteched.com/sessions.svc/">http://odata.msteched.com/sessions.svc/&lt;/a> ,I  could write 3 statements in linqpad and had them all downloaded using &lt;a href="http://gnuwin32.sourceforge.net/packages/wget.htm">wget&lt;/a>&lt;/p>
&lt;p>[sourcecode language=”csharp”]&lt;/p>
&lt;p>File.Delete(@&amp;ldquo;C:tempdownload.txt&amp;rdquo;);&lt;/p>
&lt;p>Sessions&lt;/p>
&lt;p>.Where (s =&amp;gt; (s.Level.StartsWith(&amp;ldquo;400&amp;rdquo;) ||  s.Level.StartsWith(&amp;ldquo;300&amp;rdquo;) ) &amp;amp;&amp;amp; s.Code.StartsWith(&amp;ldquo;DEV&amp;rdquo;))&lt;/p></description></item></channel></rss>