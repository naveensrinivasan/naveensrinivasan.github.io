<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>ETW on naveen srinivasan</title><link>/tags/etw/</link><description>Recent content in ETW on naveen srinivasan</description><generator>Hugo</generator><language>en</language><lastBuildDate>Mon, 29 Jun 2015 02:57:26 +0000</lastBuildDate><atom:link href="/tags/etw/index.xml" rel="self" type="application/rss+xml"/><item><title>View the http redirect and response message from an external authentication provider using ETW</title><link>/?p=1510/</link><pubDate>Mon, 29 Jun 2015 02:57:26 +0000</pubDate><guid>/?p=1510/</guid><description>Recently I had to troubleshoot messages that were being sent from an web application hosted on IIS to an external authentication provider. The logs from the application wasn’t something closer to the metal and wasn’t really providing all the details. I really wanted something like fiddler for the webserver. I could have a ran network traces to troubleshoot the issue but the problem was it wasn’t happening consistently. It was sporadic.</description></item><item><title>Use Eventsource to get the duration of a Start Stop of Custom ETW events</title><link>/?p=1493/</link><pubDate>Mon, 08 Jun 2015 19:53:29 +0000</pubDate><guid>/?p=1493/</guid><description>The EventSource library provides an option to get duration of Custom ETW start and stop events and when used with Perfview we could leverage this to stop tracing when the duration is more than what we expect.
What it is for example ,there could an external API call the application makes that has to be traced with the start and when it finishes then the stop of the event is called.</description></item><item><title>Log dynamic Custom objects in ETW using EventSource</title><link>/?p=1489/</link><pubDate>Fri, 29 May 2015 03:35:50 +0000</pubDate><guid>/?p=1489/</guid><description>With the latest release of EventSource we could create dynamic events without having to create class that inherits from EventSource. This is will be not be good for Performance.
Using these methods we could either log Anonymous objects or Classes that have the EventData Attribute applied to it. The caveat is that these objects public properties alone will be serialized. These properties have to be of native types like string,int,datetime, guid , IEnumerable.</description></item><item><title>The case of slow Visual Studio startup</title><link>/?p=1469/</link><pubDate>Wed, 20 May 2015 01:23:35 +0000</pubDate><guid>/?p=1469/</guid><description>In this post I would use Perfview /ETW to diagnose the delayed start-up of visual studio.
To analyze the problem start-up VS within Perfview as a run command
[gist https://gist.github.com/naveensrinivasan/5eb6406d6d38f2143acb]
This would launch visual studio and collect etw traces. I have also enabled CodeMarkers , which is ETW traces for Visual Studio in case if you want to trace any extensions performance.
After it completes I choose the CPU Stacks and filtered with devenv.</description></item><item><title>Measure GC Allocations and Collections using TraceEvent</title><link>/?p=1437/</link><pubDate>Tue, 12 May 2015 01:14:34 +0000</pubDate><guid>/?p=1437/</guid><description>In this post I will explore how we could use TraceEvent to measure our code (even at function level) for GC Allocations and Collections.
Save this with “.linq” extension and then open in linqpad.
[gist https://gist.github.com/naveensrinivasan/b72fd80876eb67557ae8]
Here is the TL;DR
Why would I want to know GC events on a function level? Doesn’t the PerfMon counter provide that information on an application level? Isn’t Premature optimization root of all evil?</description></item><item><title>Look ma I figured out why my ETW EventSource isn’t tracing</title><link>/?p=1414/</link><pubDate>Tue, 05 May 2015 13:47:39 +0000</pubDate><guid>/?p=1414/</guid><description>The EventSource class in the framework 4.5 helps in writing custom ETW tracing.
When using EventSource class built within the framework, if the order of the methods don’t match ordinal number position in the class it would fail generating ETW traces. The EventSource has dependency on the order of the methods in the class.
This code would produce a valid ETW traces
[gist https://gist.github.com/naveensrinivasan/a1fcd0ec78d2473499d5]
This one would fail producing any ETW Traces.</description></item></channel></rss>