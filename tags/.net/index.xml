<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>.NET on naveen srinivasan</title><link>/tags/.net/</link><description>Recent content in .NET on naveen srinivasan</description><generator>Hugo</generator><language>en</language><lastBuildDate>Fri, 29 May 2015 03:35:50 +0000</lastBuildDate><atom:link href="/tags/.net/index.xml" rel="self" type="application/rss+xml"/><item><title>Log dynamic Custom objects in ETW using EventSource</title><link>/?p=1489/</link><pubDate>Fri, 29 May 2015 03:35:50 +0000</pubDate><guid>/?p=1489/</guid><description>&lt;p>With the latest release of &lt;!-- raw HTML omitted -->EventSource&lt;!-- raw HTML omitted --> we could create dynamic events without having to create class that inherits from EventSource. This is will be not be good for Performance.&lt;/p>
&lt;p>Using these methods we could either log Anonymous objects or Classes that have the EventData Attribute applied to it. The caveat is that these objects public properties alone will be serialized. These properties have to be of native types like string,int,datetime, guid , IEnumerable. If you don’t want a property to be serialized you could apply the attribute EventIgnore.&lt;/p></description></item><item><title>Look ma I figured out why my ETW EventSource isn’t tracing</title><link>/?p=1414/</link><pubDate>Tue, 05 May 2015 13:47:39 +0000</pubDate><guid>/?p=1414/</guid><description>&lt;p>The &lt;!-- raw HTML omitted -->EventSource &lt;!-- raw HTML omitted -->class in the framework 4.5 helps in writing custom ETW tracing.&lt;/p>
&lt;p>When using EventSource class built within the framework, if the order of the methods don’t match ordinal number position in the class it would fail generating ETW traces. The EventSource has dependency on the order of the methods in the class.&lt;/p>
&lt;p>This code would produce a valid ETW traces&lt;/p></description></item><item><title>Identify and Patch .NET Code using Windbg</title><link>/?p=19/</link><pubDate>Sun, 07 Feb 2010 13:30:13 +0000</pubDate><guid>/?p=19/</guid><description>&lt;p> &lt;/p>
&lt;p>The last week was really an interesting one with debugging production code. I was debugging a Winforms application which was using .NET framework 3.5 version. The real problem was with the latest release of the code, there was bug which caused certain elements on the UI not to be displayed. This is was High priority bug and very important to the business.&lt;/p>
&lt;p>The code that was causing this bug was an integer variable inside a class.&lt;/p></description></item></channel></rss>